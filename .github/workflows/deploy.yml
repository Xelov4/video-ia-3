name: üöÄ Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      skip_build:
        description: 'Skip build step (deploy only)'
        type: boolean
        default: false
      restart_only:
        description: 'Only restart PM2 (no code update)'
        type: boolean
        default: false

jobs:
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: üìã Checkout Code
        uses: actions/checkout@v4

      - name: üü¢ Setup Node.js
        if: ${{ !inputs.restart_only }}
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: üì¶ Install Dependencies
        if: ${{ !inputs.restart_only && !inputs.skip_build }}
        run: npm ci

      - name: üîç Type Check
        if: ${{ !inputs.restart_only && !inputs.skip_build }}
        run: npm run type-check

      - name: üèóÔ∏è Build Application
        if: ${{ !inputs.restart_only && !inputs.skip_build }}
        run: npm run build
        env:
          DATABASE_URL: ${{ secrets.PROD_DATABASE_URL }}
          NODE_ENV: production

      - name: üöÄ Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 22
          timeout: 300s
          script: |
            set -e
            echo "üöÄ Starting deployment to video-ia.net..."
            
            # Navigate to project directory
            cd /var/www/video-ia.net
            
            # Backup current version (if exists)
            if [ -d ".git" ]; then
              echo "üì¶ Creating backup..."
              git stash push -m "Pre-deploy backup $(date '+%Y%m%d_%H%M%S')" || true
            fi
            
            # Update code (only if not restart-only)
            if [ "${{ inputs.restart_only }}" != "true" ]; then
              echo "üì• Pulling latest code..."
              git fetch origin
              git reset --hard origin/main
              git clean -fd
              
              # Install/update dependencies
              echo "üì¶ Installing dependencies..."
              npm ci --production --silent
              
              # Build if not skipped
              if [ "${{ inputs.skip_build }}" != "true" ]; then
                echo "üèóÔ∏è Building application..."
                npm run build
              fi
            fi
            
            # Health check before restart
            echo "üîç Pre-restart health check..."
            if pm2 describe video-ia-net > /dev/null 2>&1; then
              echo "‚úÖ PM2 process exists"
            else
              echo "‚ö†Ô∏è PM2 process not found, will start fresh"
            fi
            
            # Restart application
            echo "üîÑ Restarting application..."
            pm2 restart video-ia-net || pm2 start ecosystem.config.js
            
            # Post-deployment health check
            echo "üè• Post-deployment health check..."
            sleep 5
            
            # Check if application is responding
            if curl -f -s http://localhost:3000/api/tools?limit=1 > /dev/null; then
              echo "‚úÖ Application is healthy!"
              echo "üéâ Deployment completed successfully!"
            else
              echo "‚ùå Application health check failed!"
              echo "üîÑ Attempting to restart..."
              pm2 restart video-ia-net
              sleep 10
              if curl -f -s http://localhost:3000/api/tools?limit=1 > /dev/null; then
                echo "‚úÖ Recovery successful!"
              else
                echo "üí• Deployment failed - manual intervention required"
                pm2 logs video-ia-net --lines 20
                exit 1
              fi
            fi
            
            # Show final status
            echo "üìä Final status:"
            pm2 status video-ia-net
            echo "üåê Application available at: https://www.video-ia.net"

      - name: üìù Deployment Summary
        if: always()
        run: |
          echo "## üöÄ Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Target**: https://www.video-ia.net" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Time**: $(date -u)" >> $GITHUB_STEP_SUMMARY
          if [ "${{ inputs.restart_only }}" == "true" ]; then
            echo "- **Action**: Restart only" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ inputs.skip_build }}" == "true" ]; then
            echo "- **Action**: Deploy without build" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Action**: Full deployment" >> $GITHUB_STEP_SUMMARY
          fi

  notify:
    name: Notification
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    steps:
      - name: üìß Notify Status
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "‚úÖ Deployment to video-ia.net completed successfully!"
          else
            echo "‚ùå Deployment to video-ia.net failed!"
          fi